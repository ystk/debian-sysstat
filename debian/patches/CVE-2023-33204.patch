Origin: https://github.com/opencontainers/runc/commit/6f8dc568e6ab072bb8205b732f04e685bf9237c0
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2023-02-18

From 954ff2e2673cef48f0ed44668c466eab041db387 Mon Sep 17 00:00:00 2001
From: Pavel Kopylov <pkopylov@cloudlinux.com>
Date: Wed, 17 May 2023 11:33:45 +0200
Subject: [PATCH] Fix an overflow which is still possible for some values.

---
 common.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

Index: sysstat-11.0.1/common.c
===================================================================
--- sysstat-11.0.1.orig/common.c
+++ sysstat-11.0.1/common.c
@@ -928,14 +928,15 @@ char *get_pretty_name_from_persistent(ch
  */
 void check_overflow(size_t val1, size_t val2, size_t val3)
 {
-	if ((unsigned long long) val1 *
-	    (unsigned long long) val2 *
-	    (unsigned long long) val3 > UINT_MAX) {
+	if ((val1 != 0) && (val2 != 0) && (val3 != 0) &&
+	    (((unsigned long long) UINT_MAX / (unsigned long long) val1 <
+	      (unsigned long long) val2) ||
+	     ((unsigned long long) UINT_MAX / ((unsigned long long) val1 * (unsigned long long) val2) <
+	      (unsigned long long) val3))) {
 #ifdef DEBUG
-		fprintf(stderr, "%s: Overflow detected (%llu). Aborting...\n",
-			__FUNCTION__,
-			(unsigned long long) val1 * (unsigned long long) val2 *	(unsigned long long) val3);
+		fprintf(stderr, "%s: Overflow detected (%u,%u,%u). Aborting...\n",
+			__FUNCTION__, val1, val2, val3);
 #endif
-	exit(4);
+		exit(4);
 	}
 }
